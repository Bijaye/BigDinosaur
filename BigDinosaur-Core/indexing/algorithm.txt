Location of file=a/encrypted/cluster1/location/a1.txt
Location of file=a/encrypted/cluster2/location/a2.txt
Location of file=a/encrypted/cluster3/location/a3.txt
.
.
.
.
.
N
a1.txt
abishkar pokhara developer
yro   ktm     developer
use case 
search abishkar 

search every location until abishkar is found 
if found create index on another file index.txt
index created=abishkar a/location2/a.txt in index.txt

again second time search abishkar 
search abishkar ,this time search from index.txt

Indexer clusters are groups of Splunk Enterprise indexers configured to replicate each others' data, so that the system keeps multiple copies of all data. This process is known as index replication. By maintaining multiple, identical copies of Splunk Enterprise data, clusters prevent data loss while promoting data availability for searching.

Indexer clusters feature automatic failover from one indexer to the next. This means that, if one or more indexers fail, incoming data continues to get indexed and indexed data continues to be searchable.

Clustered
A clustered index sorts and stores the data rows of the table or view in order based on the clustered index key. The clustered index is implemented as a B-tree index structure that supports fast retrieval of the rows, based on their clustered index key values.
Clustered and Nonclustered Indexes Described
Create Clustered Indexes
Nonclustered
A nonclustered index can be defined on a table or view with a clustered index or on a heap. Each index row in the nonclustered index contains the nonclustered key value and a row locator. This locator points to the data row in the clustered index or heap having the key value. The rows in the index are stored in the order of the index key values, but the data rows are not guaranteed to be in any particular order unless a clustered index is created on the table.



 Collect data from various sources.

 Import, extract and transform text from any files.

 Commit it in your own repository (e.g. search engine, database, etc)


inmemory indexing 
file indexing 
location where the index will be stored.
the pattern of indexing can be anything ,there is no any rule like
user data can be in any form 
/pattern1/pattern2/cluster1/data/a.txt=indexing key 


primary key index
2.unique index
3.bitmap index
4.hash index
5.function based index
6.B-tree index(default index created) on table.
7.Virtual index(which do not show entry in DBA_segment). 
bitmap index
2.B-tree index 

