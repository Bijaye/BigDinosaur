Every file has uri and path 
Every file is defined buffersize ,no of replication,block size ,iscreateparent(it can be true and false )
There can be default server configuration for 
 //default server configuration 
 private long blockSize;
 private int writePacketSize;
 private short replication;
 private int fileBufferSize;
 private boolean encryptDataTransfer;
 
 same file can e located on different blocks locations 
 for the same path there can be array of blocklocations
  BlockLocation[] locs and therefor can have more than one 
  status FileStatus[]
  
   final FileSystem[] children = getChildFileSystems(); 
  
  /**
   * Get all the immediate child FileSystems embedded in this FileSystem.
   * It does not recurse and get grand children.  If a FileSystem
   * has multiple child FileSystems, then it should return a unique list
   * of those FileSystems.  Default is to return null to signify no children.
   * 
   * @return FileSystems used by this FileSystem
   */
   
   Generate stream after creating file system .
   that stream will be used on that file system i.o
   
     public static FSDataOutputStream create(FileSystem fs,
      Path file, FsPermission permission) throws IOException {
    // create the file with default permission
    FSDataOutputStream out = fs.create(file);
    // set its permission to the supplied one
    fs.setPermission(file, permission);
    return out;
  }
  
  
  
  a.txt 
  it has acl defined ,it has path ,it has no of block locations ,e.g that might be in one host 
  another host ,it has defined buffer 
  
  
    /user          -> hdfs://nnContainingUserDir/user
  /project/foo   -> hdfs://nnProject1/projects/foo
  /project/bar   -> hdfs://nnProject2/projects/bar
  /tmp           -> hdfs://nnTmp/privateTmpForUserXXX
 
  
  
  